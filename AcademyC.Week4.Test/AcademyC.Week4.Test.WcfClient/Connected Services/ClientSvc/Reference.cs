//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/AcademyC.Week4.Test.Core.Models")]
    public partial class Client : object
    {
        
        private string ClientCodeField;
        
        private string FirstNameField;
        
        private int IDField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCode
        {
            get
            {
                return this.ClientCodeField;
            }
            set
            {
                this.ClientCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IClientService")]
    public interface IClientService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        bool AddClient(ServiceReference1.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddClient", ReplyAction="http://tempuri.org/IClientService/AddClientResponse")]
        System.Threading.Tasks.Task<bool> AddClientAsync(ServiceReference1.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientById", ReplyAction="http://tempuri.org/IClientService/DeleteClientByIdResponse")]
        bool DeleteClientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientById", ReplyAction="http://tempuri.org/IClientService/DeleteClientByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/FetchClients", ReplyAction="http://tempuri.org/IClientService/FetchClientsResponse")]
        System.Collections.Generic.List<ServiceReference1.Client> FetchClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/FetchClients", ReplyAction="http://tempuri.org/IClientService/FetchClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.Client>> FetchClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientById", ReplyAction="http://tempuri.org/IClientService/GetClientByIdResponse")]
        ServiceReference1.Client GetClientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientById", ReplyAction="http://tempuri.org/IClientService/GetClientByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Client> GetClientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateClient", ReplyAction="http://tempuri.org/IClientService/UpdateClientResponse")]
        bool UpdateClient(ServiceReference1.Client item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/UpdateClient", ReplyAction="http://tempuri.org/IClientService/UpdateClientResponse")]
        System.Threading.Tasks.Task<bool> UpdateClientAsync(ServiceReference1.Client item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IClientServiceChannel : ServiceReference1.IClientService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IClientService>, ServiceReference1.IClientService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ClientServiceClient() : 
                base(ClientServiceClient.GetDefaultBinding(), ClientServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IClientService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ClientServiceClient.GetBindingForEndpoint(endpointConfiguration), ClientServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ClientServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ClientServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool AddClient(ServiceReference1.Client item)
        {
            return base.Channel.AddClient(item);
        }
        
        public System.Threading.Tasks.Task<bool> AddClientAsync(ServiceReference1.Client item)
        {
            return base.Channel.AddClientAsync(item);
        }
        
        public bool DeleteClientById(int id)
        {
            return base.Channel.DeleteClientById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientByIdAsync(int id)
        {
            return base.Channel.DeleteClientByIdAsync(id);
        }
        
        public System.Collections.Generic.List<ServiceReference1.Client> FetchClients()
        {
            return base.Channel.FetchClients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.Client>> FetchClientsAsync()
        {
            return base.Channel.FetchClientsAsync();
        }
        
        public ServiceReference1.Client GetClientById(int id)
        {
            return base.Channel.GetClientById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Client> GetClientByIdAsync(int id)
        {
            return base.Channel.GetClientByIdAsync(id);
        }
        
        public bool UpdateClient(ServiceReference1.Client item)
        {
            return base.Channel.UpdateClient(item);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClientAsync(ServiceReference1.Client item)
        {
            return base.Channel.UpdateClientAsync(item);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClientService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClientService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/AcademyC.Week4.Test.Wcf/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ClientServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IClientService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ClientServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IClientService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IClientService,
        }
    }
}
